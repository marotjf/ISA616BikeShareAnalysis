setwd("M:/ISA 616/ISA616BikeShareAnalysis/BikeShare Workflow")
bikeshare <- read.csv("Bike Share Data.csv", stringsAsFactors = TRUE)
#Data Description Code
str(bikeshare)
#calling data summary function that is within github
source('data summary.R')
data.summary(bikeshare)
#printing head and tail of data in table
DT::datatable(head(bikeshare, 10))
DT::datatable(tail(bikeshare, 10))
#Splitting date and time column into a separate numeric date column and numeric time column
bikeshare$Date <- sapply(strsplit(as.character(bikeshare$datetime), " "), "[", 1)
bikeshare$Time <- sapply(strsplit(as.character(bikeshare$datetime), " "), "[", 2)
bikeshare$Date <- as.Date(bikeshare$datetime,format='%m/%d/%Y')
bikeshare$Time <- as.factor(bikeshare$Time)
bikeshare$Time <- as.numeric(bikeshare$Time)
#recoding other variables as factors
bikeshare$quarter <- factor(bikeshare$season) #quarter is a more appropriate name for this variable
bikeshare$holiday <- factor(bikeshare$holiday)
bikeshare$workingday <- factor(bikeshare$workingday)
bikeshare$weather <- factor(bikeshare$weather)
#Removing original datetime column using select function in dplyr
bikeshare<-select(bikeshare, -datetime)
bikeshare<-select(bikeshare, -season)
dum<-as.data.frame(model.matrix(~0+bikeshare$quarter))
colnames(dum)<-c("1Q", "2Q", "3Q", "4Q")
bikeshare<-cbind(bikeshare, dum[,-1])
dum1<-as.data.frame(model.matrix(~0+bikeshare$weather))
colnames(dum1)<-c("Clear", "Mist", "Light_SnowRain", "Heavy_SnowRain")
bikeshare<-cbind(bikeshare, dum1[,-1])
bikeshare<-select(bikeshare, -quarter)
bikeshare<-select(bikeshare, -weather)
bikedate <- as.POSIXct.Date(bikeshare$Date) #using this variable just for the plot
dfplot =data.frame(select(bikeshare,Date, count))
PLOT<-function(x){
theme_set(theme_gray(base_size = 14))
label=colnames(x)[2]
g=ggplot(x, aes(Date, x[,2]))
g=g+ geom_line()
g = g + scale_x_datetime(name = "Date",
breaks = date_breaks("70 days"),
labels = date_format(format = "%b %d"),
expand = c(0,0))
g=g+xlab("") + ylab(paste0("Count of Rentals",label))
print(g)
}
PLOT(dfplot)
dfplot =data.frame(select(bikeshare,bikedate, count))
dfplot =data.frame(select(bikeshare,bikedate, count))
bikeshare$Date <- as.POSIXct.Date(bikeshare$Date) #using this variable just for the plot
dfplot =data.frame(select(bikeshare,Date, count))
PLOT(dfplot)
boxplot(bikeshare$count)
#Plots to look at data
plot(as.Date(bikeshare$Date), bikeshare$count)
bikeshare<-select(bikeshare, -Time)
bikeshare<-select(bikeshare, -Date)
bikeshare<-select(bikeshare, -Season)
bikeshare<-select(bikeshare, -Quarter)
bikeshare<-select(bikeshare, -quarter)
bikeshare<-select(bikeshare, -2Q)
str(bikeshare)
The first step was to separate datetime into a separate date column and numeric time column. This will allow for the inclusion of either date or time, if one wanted to perform a time series analysis on the data.
knitr::opts_chunk$set(echo = TRUE,
cache = TRUE,
warning = FALSE,
message = FALSE)
#recoding other variables as factors
bikeshare$quarter <- factor(bikeshare$season) #quarter is a more appropriate name for this variable
bikeshare$holiday <- factor(bikeshare$holiday)
#recoding other variables as factors
bikeshare$quarter <- factor(bikeshare$season) #quarter is a more appropriate name for this variable
#recoding other variables as factors
bikeshare$season <- factor(bikeshare$season)
knitr::opts_chunk$set(echo = TRUE,
cache = TRUE,
warning = FALSE,
message = FALSE)
if(require(pacman)==FALSE) install.packages("pacman")
pacman::p_load(readxl,fpp2,ggplot2,scales,dplyr, forecast, rsample, rpart, rpart.plot, ipred, caret, DT )
#Reading in data
setwd("M:/ISA 616/ISA616BikeShareAnalysis/BikeShare Workflow")
bikeshare <- read.csv("Bike Share Data.csv", stringsAsFactors = TRUE)
#Calling data summary function that is included within the github.
source('data summary.R')
data.summary(bikeshare)
DT::datatable(head(bikeshare, 10))
DT::datatable(tail(bikeshare, 10))
bikeshare$Date <- sapply(strsplit(as.character(bikeshare$datetime), " "), "[", 1)
bikeshare$Time <- sapply(strsplit(as.character(bikeshare$datetime), " "), "[", 2)
bikeshare$Date <- as.Date(bikeshare$datetime,format='%m/%d/%Y')
bikeshare$Time <- as.factor(bikeshare$Time)
bikeshare$Time <- as.numeric(bikeshare$Time)
#Removing original datetime using select function in dplyr
bikeshare<-select(bikeshare, -datetime)
#recoding other variables as factors
bikeshare$season <- factor(bikeshare$season)
bikeshare$holiday <- factor(bikeshare$holiday)
bikeshare$workingday <- factor(bikeshare$workingday)
bikeshare$weather <- factor(bikeshare$weather)
#creating dummy variables for weather
dum1<-as.data.frame(model.matrix(~0+bikeshare$weather))
colnames(dum1)<-c("Clear", "Mist", "Light_SnowRain", "Heavy_SnowRain")
bikeshare<-cbind(bikeshare, dum1[,-1])
dum<-as.data.frame(model.matrix(~0+bikeshare$quarter))
dum<-as.data.frame(model.matrix(~0+bikeshare$season))
colnames(dum)<-c("Spring", "Summer", "Fall", "Winter")
bikeshare<-cbind(bikeshare, dum[,-1])
#recoding other variables as factors
bikeshare$season <- factor(bikeshare$season)
bikeshare$holiday <- factor(bikeshare$holiday)
bikeshare$workingday <- factor(bikeshare$workingday)
bikeshare$weather <- factor(bikeshare$weather)
#creating dummy variables for weather
dum1<-as.data.frame(model.matrix(~0+bikeshare$weather))
colnames(dum1)<-c("Clear", "Mist", "Light_SnowRain", "Heavy_SnowRain")
bikeshare<-cbind(bikeshare, dum1[,-1])
dum<-as.data.frame(model.matrix(~0+bikeshare$season))
colnames(dum)<-c("Spring", "Summer", "Fall", "Winter")
bikeshare<-cbind(bikeshare, dum[,-1])
#Removing original weather variable
bikeshare<-select(bikeshare, -weather)
#recoding other variables as factors
bikeshare$season <- factor(bikeshare$season)
bikeshare$holiday <- factor(bikeshare$holiday)
bikeshare$workingday <- factor(bikeshare$workingday)
bikeshare$weather <- factor(bikeshare$weather)
#creating dummy variables for weather
dum1<-as.data.frame(model.matrix(~0+bikeshare$weather))
colnames(dum1)<-c("Clear", "Mist", "Light_SnowRain", "Heavy_SnowRain")
bikeshare<-cbind(bikeshare, dum1[,-1])
dum<-as.data.frame(model.matrix(~0+bikeshare$season))
colnames(dum)<-c("Spring", "Summer", "Fall", "Winter")
bikeshare<-cbind(bikeshare, dum[,-1])
#Removing original weather variable
bikeshare<-select(bikeshare, -weather)
knitr::opts_chunk$set(echo = TRUE,
cache = TRUE,
warning = FALSE,
message = FALSE)
if(require(pacman)==FALSE) install.packages("pacman")
pacman::p_load(readxl,fpp2,ggplot2,scales,dplyr, forecast, rsample, rpart, rpart.plot, ipred, caret, DT )
#Reading in data
setwd("M:/ISA 616/ISA616BikeShareAnalysis/BikeShare Workflow")
bikeshare <- read.csv("Bike Share Data.csv", stringsAsFactors = TRUE)
#Calling data summary function that is included within the github.
source('data summary.R')
data.summary(bikeshare)
DT::datatable(head(bikeshare, 10))
DT::datatable(tail(bikeshare, 10))
bikeshare$Date <- sapply(strsplit(as.character(bikeshare$datetime), " "), "[", 1)
bikeshare$Time <- sapply(strsplit(as.character(bikeshare$datetime), " "), "[", 2)
bikeshare$Date <- as.Date(bikeshare$datetime,format='%m/%d/%Y')
bikeshare$Time <- as.factor(bikeshare$Time)
bikeshare$Time <- as.numeric(bikeshare$Time)
#Removing original datetime using select function in dplyr
bikeshare<-select(bikeshare, -datetime)
#recoding other variables as factors
bikeshare$season <- factor(bikeshare$season)
bikeshare$holiday <- factor(bikeshare$holiday)
bikeshare$workingday <- factor(bikeshare$workingday)
bikeshare$weather <- factor(bikeshare$weather)
#creating dummy variables for weather
dum1<-as.data.frame(model.matrix(~0+bikeshare$weather))
colnames(dum1)<-c("Clear", "Mist", "Light_SnowRain", "Heavy_SnowRain")
bikeshare<-cbind(bikeshare, dum1[,-1])
dum<-as.data.frame(model.matrix(~0+bikeshare$season))
colnames(dum)<-c("Spring", "Summer", "Fall", "Winter")
bikeshare<-cbind(bikeshare, dum[,-1])
#Removing original weather variable
bikeshare<-select(bikeshare, -weather)
bikeshare<-select(bikeshare, -season)
dum1<-as.data.frame(model.matrix(~0+bikeshare$weather))
dum1<-as.data.frame(model.matrix(~0+bikeshare$weather))
boxplot(bikeshare$count)
knitr::opts_chunk$set(echo = TRUE,
cache = TRUE,
warning = FALSE,
message = FALSE)
if(require(pacman)==FALSE) install.packages("pacman")
pacman::p_load(readxl,fpp2,ggplot2,scales,dplyr, forecast, rsample, rpart, rpart.plot, ipred, caret, DT )
#Reading in data
setwd("M:/ISA 616/ISA616BikeShareAnalysis/BikeShare Workflow")
bikeshare <- read.csv("Bike Share Data.csv", stringsAsFactors = TRUE)
#Calling data summary function that is included within the github.
source('data summary.R')
data.summary(bikeshare)
DT::datatable(head(bikeshare, 10))
bikeshare$Date <- sapply(strsplit(as.character(bikeshare$datetime), " "), "[", 1)
bikeshare$Time <- sapply(strsplit(as.character(bikeshare$datetime), " "), "[", 2)
bikeshare$Date <- as.Date(bikeshare$datetime,format='%m/%d/%Y')
bikeshare$Time <- as.factor(bikeshare$Time)
bikeshare$Time <- as.numeric(bikeshare$Time)
#Removing original datetime using select function in dplyr
bikeshare<-select(bikeshare, -datetime)
#recoding other variables as factors
bikeshare$season <- factor(bikeshare$season)
bikeshare$holiday <- factor(bikeshare$holiday)
bikeshare$workingday <- factor(bikeshare$workingday)
bikeshare$weather <- factor(bikeshare$weather)
#creating dummy variables for weather
dum1<-as.data.frame(model.matrix(~0+bikeshare$weather))
colnames(dum1)<-c("Clear", "Mist", "Light_SnowRain", "Heavy_SnowRain")
bikeshare<-cbind(bikeshare, dum1[,-1])
dum<-as.data.frame(model.matrix(~0+bikeshare$season))
colnames(dum)<-c("Spring", "Summer", "Fall", "Winter")
bikeshare<-cbind(bikeshare, dum[,-1])
#Removing original weather variable
bikeshare<-select(bikeshare, -weather)
bikeshare<-select(bikeshare, -season)
boxplot(bikeshare$count)
#split into testing and validation
set.seed(13)
trainIndex = sample(1:nrow(bikeshare), size = round(0.7*nrow(bikeshare)), replace=FALSE)
bikeshare.train<-bikeshare[trainIndex, ]
bikeshare.valid<-bikeshare[-trainIndex, ]
bikeshare.train<-select(bikeshare.train, -registered)
bikeshare.train<-select(bikeshare.train, -casual)
bikeshare.valid<-select(bikeshare.valid, -registered)
bikeshare.valid<-select(bikeshare.valid, -casual)
bikeshare.train<-select(bikeshare.train, -Time)
bikeshare.train<-select(bikeshare.train, -Date)
bikeshare.valid<-select(bikeshare.valid, -Time)
bikeshare.valid<-select(bikeshare.valid, -Date)
bikeshare.train<-select(bikeshare.train, -Summer)
knitr::opts_chunk$set(echo = TRUE,
cache = TRUE,
warning = FALSE,
message = FALSE)
if(require(pacman)==FALSE) install.packages("pacman")
pacman::p_load(readxl,fpp2,ggplot2,scales,dplyr, forecast, rsample, rpart, rpart.plot, ipred, caret, DT )
#Reading in data
setwd("M:/ISA 616/ISA616BikeShareAnalysis/BikeShare Workflow")
bikeshare <- read.csv("Bike Share Data.csv", stringsAsFactors = TRUE)
#Calling data summary function that is included within the github.
source('data summary.R')
data.summary(bikeshare)
DT::datatable(head(bikeshare, 10))
DT::datatable(head(bikeshare, 10))
DT::datatable(tail(bikeshare, 10))
bikeshare$Date <- sapply(strsplit(as.character(bikeshare$datetime), " "), "[", 1)
bikeshare$Time <- sapply(strsplit(as.character(bikeshare$datetime), " "), "[", 2)
bikeshare$Date <- as.Date(bikeshare$datetime,format='%m/%d/%Y')
bikeshare$Time <- as.factor(bikeshare$Time)
bikeshare$Time <- as.numeric(bikeshare$Time)
#Removing original datetime using select function in dplyr
bikeshare<-select(bikeshare, -datetime)
#recoding other variables as factors
bikeshare$season <- factor(bikeshare$season)
bikeshare$holiday <- factor(bikeshare$holiday)
bikeshare$workingday <- factor(bikeshare$workingday)
bikeshare$weather <- factor(bikeshare$weather)
#creating dummy variables for weather
dum1<-as.data.frame(model.matrix(~0+bikeshare$weather))
colnames(dum1)<-c("Clear", "Mist", "Light_SnowRain", "Heavy_SnowRain")
bikeshare<-cbind(bikeshare, dum1[,-1])
dum<-as.data.frame(model.matrix(~0+bikeshare$season))
colnames(dum)<-c("Spring", "Summer", "Fall", "Winter")
bikeshare<-cbind(bikeshare, dum[,-1])
#Removing original weather variable
bikeshare<-select(bikeshare, -weather)
bikeshare<-select(bikeshare, -season)
boxplot(bikeshare$count)
set.seed(13)
trainIndex = sample(1:nrow(bikeshare), size = round(0.7*nrow(bikeshare)), replace=FALSE)
bikeshare.train<-bikeshare[trainIndex, ]
bikeshare.valid<-bikeshare[-trainIndex, ]
bikeshare.train<-select(bikeshare.train, -registered)
bikeshare.train<-select(bikeshare.train, -casual)
bikeshare.valid<-select(bikeshare.valid, -registered)
bikeshare.valid<-select(bikeshare.valid, -casual)
bikeshare.train<-select(bikeshare.train, -Time)
bikeshare.train<-select(bikeshare.train, -Date)
bikeshare.train<-select(bikeshare.train, -Summer)
bikeshare.train<-select(bikeshare.train, -Fall)
bikeshare.train<-select(bikeshare.train, -Winter)
bikeshare.valid<-select(bikeshare.valid, -Time)
bikeshare.valid<-select(bikeshare.valid, -Date)
bikeshare.valid<-select(bikeshare.valid, -Summer)
bikeshare.valid<-select(bikeshare.valid, -Fall)
bikeshare.valid<-select(bikeshare.valid, -Winter)
#First fitting model with all variables available in training set
full<-lm(count~ .,data=bikeshare.train)
#Next using step-wise function to create multiple regression for total Count
null<-lm(bikeshare.train$count~1, data=bikeshare.train)
lm.step<-step(null, scope=list(lower=null, upper=full), direction="both", trace=0)
summary(lm.step)
#Model Evaluation
p.full<-predict(full, newdata=bikeshare.valid)
p.step<-predict(lm.step, newdata=bikeshare.valid)
accuracy(p.step, bikeshare.valid$count)
#Model Evaluation
p.full<-predict(full, newdata=bikeshare.valid)
p.step<-predict(lm.step, newdata=bikeshare.valid)
accuracy(p.step, bikeshare.valid$count)
#split into testing and validation
set.seed(13)
trainIndex1 = sample(1:nrow(bikeshare), size = round(0.7*nrow(bikeshare)), replace=FALSE)
bikeshare.train1<-bikeshare[trainIndex1, ]
bikeshare.valid1<-bikeshare[-trainIndex1, ]
bikeshare.train1<-select(bikeshare.train, -count)
bikeshare.valid1<-select(bikeshare.valid, -count)
m1 <- rpart(
formula = casual ~ holiday + workingday + temp + humidity + windspeed,
data    = bikeshare.train,
method  = "anova"
)
m1 <- rpart(
formula = Casual ~ holiday + workingday + temp + humidity + windspeed,
data    = bikeshare.train,
method  = "anova"
)
m1 <- rpart(
formula = casual ~ holiday + workingday + temp + humidity + windspeed,
data    = bikeshare.train,
method  = "anova"
)
#split into testing and validation
set.seed(13)
trainIndex1 = sample(1:nrow(bikeshare), size = round(0.7*nrow(bikeshare)), replace=FALSE)
bikeshare.train1<-bikeshare[trainIndex1, ]
bikeshare.valid1<-bikeshare[-trainIndex1, ]
bikeshare.train1<-select(bikeshare.train, -count)
bikeshare.valid1<-select(bikeshare.valid, -count)
m1 <- rpart(
formula = casual ~ holiday + workingday + temp + humidity + windspeed,
data    = bikeshare.train,
method  = "anova"
)
#Model Evaluation
p.full<-predict(full, newdata=bikeshare.valid)
p.step<-predict(lm.step, newdata=bikeshare.valid)
accuracy(p.step, bikeshare.valid$count)
#split into testing and validation
set.seed(13)
trainIndex1 = sample(1:nrow(bikeshare), size = round(0.7*nrow(bikeshare)), replace=FALSE)
bikeshare.train1<-bikeshare[trainIndex1, ]
bikeshare.valid1<-bikeshare[-trainIndex1, ]
bikeshare.train1<-select(bikeshare.train1, -count)
bikeshare.valid1<-select(bikeshare.valid1, -count)
m1 <- rpart(
formula = casual ~ holiday + workingday + temp + humidity + windspeed,
data    = bikeshare.train,
method  = "anova"
)
str(bikeshare)
m1 <- rpart(
formula = casual ~ .,
data    = bikeshare.train,
method  = "anova"
)
m1 <- rpart(
formula = bikeshare.train$casual ~ .,
data    = bikeshare.train,
method  = "anova"
)
m1 <- rpart(
formula = bikeshare$casual ~ .,
data    = bikeshare,
method  = "anova"
)
rpart.plot(m1)
m1 <- rpart(
formula = casual ~ .,
data    = bikeshare.train1,
method  = "anova"
)
rpart.plot(m1)
#split into testing and validation
set.seed(13)
trainIndex1 = sample(1:nrow(bikeshare), size = round(0.7*nrow(bikeshare)), replace=FALSE)
str(bikeshare)
bikeshare.train<-bikeshare[trainIndex1, ]
bikeshare.valid<-bikeshare[-trainIndex1, ]
bikeshare.train1<-select(bikeshare.train1, -count)
bikeshare.train1<-select(bikeshare.train1, -registered)
bikeshare.valid1<-select(bikeshare.valid1, -registered)
m1 <- rpart(
formula = casual ~ .,
data    = bikeshare.train1,
method  = "anova"
)
rpart.plot(m1)
#Validating the regression tree using the cv bagged model
ctrl <- trainControl(method = "cv",  number = 10)
# CV bagged model
bagged_cv <- train(
casual ~ holiday + workingday + temp + humidity + windspeed,
data = bikeshare.train,
method = "treebag",
trControl = ctrl,
importance = TRUE
)
# assess results
bagged_cv
# plot most important variables
plot(varImp(bagged_cv), 20)
# plot most important variables
plot(varImp(bagged_cv))
knitr::opts_chunk$set(echo = TRUE,
cache = TRUE,
warning = FALSE,
message = FALSE)
if(require(pacman)==FALSE) install.packages("pacman")
pacman::p_load(readxl,fpp2,ggplot2,scales,dplyr, forecast, rsample, rpart, rpart.plot, ipred, caret, DT )
#Reading in data
setwd("M:/ISA 616/ISA616BikeShareAnalysis/BikeShare Workflow")
bikeshare <- read.csv("Bike Share Data.csv", stringsAsFactors = TRUE)
#Calling data summary function that is included within the github.
source('data summary.R')
data.summary(bikeshare)
DT::datatable(head(bikeshare, 10))
DT::datatable(tail(bikeshare, 10))
bikeshare$Date <- sapply(strsplit(as.character(bikeshare$datetime), " "), "[", 1)
bikeshare$Time <- sapply(strsplit(as.character(bikeshare$datetime), " "), "[", 2)
bikeshare$Date <- as.Date(bikeshare$datetime,format='%m/%d/%Y')
bikeshare$Time <- as.factor(bikeshare$Time)
bikeshare$Time <- as.numeric(bikeshare$Time)
#Removing original datetime using select function in dplyr
bikeshare<-select(bikeshare, -datetime)
#recoding other variables as factors
bikeshare$season <- factor(bikeshare$season)
bikeshare$holiday <- factor(bikeshare$holiday)
bikeshare$workingday <- factor(bikeshare$workingday)
bikeshare$weather <- factor(bikeshare$weather)
#creating dummy variables for weather
dum1<-as.data.frame(model.matrix(~0+bikeshare$weather))
colnames(dum1)<-c("Clear", "Mist", "Light_SnowRain", "Heavy_SnowRain")
bikeshare<-cbind(bikeshare, dum1[,-1])
dum<-as.data.frame(model.matrix(~0+bikeshare$season))
colnames(dum)<-c("Spring", "Summer", "Fall", "Winter")
bikeshare<-cbind(bikeshare, dum[,-1])
#Removing original weather variable
bikeshare<-select(bikeshare, -weather)
bikeshare<-select(bikeshare, -season)
boxplot(bikeshare$count)
set.seed(13)
trainIndex = sample(1:nrow(bikeshare), size = round(0.7*nrow(bikeshare)), replace=FALSE)
bikeshare.train<-bikeshare[trainIndex, ]
bikeshare.valid<-bikeshare[-trainIndex, ]
bikeshare.train<-select(bikeshare.train, -registered)
bikeshare.train<-select(bikeshare.train, -casual)
bikeshare.valid<-select(bikeshare.valid, -registered)
bikeshare.valid<-select(bikeshare.valid, -casual)
bikeshare.train<-select(bikeshare.train, -Time)
bikeshare.train<-select(bikeshare.train, -Date)
bikeshare.train<-select(bikeshare.train, -Summer)
bikeshare.train<-select(bikeshare.train, -Fall)
bikeshare.train<-select(bikeshare.train, -Winter)
bikeshare.valid<-select(bikeshare.valid, -Time)
bikeshare.valid<-select(bikeshare.valid, -Date)
bikeshare.valid<-select(bikeshare.valid, -Summer)
bikeshare.valid<-select(bikeshare.valid, -Fall)
bikeshare.valid<-select(bikeshare.valid, -Winter)
#First fitting model with all variables available in training set
full<-lm(count~ .,data=bikeshare.train)
#Next using step-wise function to create multiple regression for total Count
null<-lm(bikeshare.train$count~1, data=bikeshare.train)
lm.step<-step(null, scope=list(lower=null, upper=full), direction="both", trace=0)
summary(lm.step)
#Model Evaluation
p.full<-predict(full, newdata=bikeshare.valid)
p.step<-predict(lm.step, newdata=bikeshare.valid)
accuracy(p.step, bikeshare.valid$count)
set.seed(13)
trainIndex1 = sample(1:nrow(bikeshare), size = round(0.7*nrow(bikeshare)), replace=FALSE)
str(bikeshare)
bikeshare.train<-bikeshare[trainIndex1, ]
bikeshare.valid<-bikeshare[-trainIndex1, ]
bikeshare.train1<-select(bikeshare.train1, -count)
set.seed(13)
trainIndex1 = sample(1:nrow(bikeshare), size = round(0.7*nrow(bikeshare)), replace=FALSE)
str(bikeshare)
bikeshare.train1<-bikeshare[trainIndex1, ]
bikeshare.valid1<-bikeshare[-trainIndex1, ]
bikeshare.train1<-select(bikeshare.train1, -count)
bikeshare.valid1<-select(bikeshare.valid1, -count)
bikeshare.train1<-select(bikeshare.train1, -registered)
bikeshare.valid1<-select(bikeshare.valid1, -registered)
m1 <- rpart(
formula = casual ~ .,
data    = bikeshare.train1,
method  = "anova"
)
rpart.plot(m1)
#Validating the regression tree using the cv bagged model
ctrl <- trainControl(method = "cv",  number = 10)
# CV bagged model
bagged_cv <- train(
casual ~ holiday + workingday + temp + humidity + windspeed,
data = bikeshare.train,
method = "treebag",
trControl = ctrl,
importance = TRUE
)
# assess results
bagged_cv
# plot most important variables
plot(varImp(bagged_cv))
ctrl <- trainControl(method = "cv",  number = 10)
# CV bagged model
bagged_cv <- train(
casual ~ holiday + workingday + temp + humidity + windspeed,
data = bikeshare.train,
method = "treebag",
trControl = ctrl,
importance = TRUE
)
# assess results
bagged_cv
# plot most important variables
plot(varImp(bagged_cv))
